/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package Vista;

import Modelo.*;
import Controlador.*;
import java.awt.Color;
import static java.lang.System.exit;
import java.text.ParseException;
import java.text.SimpleDateFormat;
import java.util.Date;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.JFileChooser;
import javax.swing.JFrame;
import javax.swing.JOptionPane;
import javax.swing.JTable;
import javax.swing.filechooser.FileNameExtensionFilter;
import javax.swing.table.DefaultTableModel;


/**
 *
 * @author Alumno
 */
public class main_ClubDeportivo extends javax.swing.JFrame {
   
    // Modelos de cada una de las tablas
    
    DefaultTableModel modeloTablaJugadores = new DefaultTableModel();
    DefaultTableModel modeloTablaEntrenadores = new DefaultTableModel();
    DefaultTableModel modeloTablaMantenedores = new DefaultTableModel();
    DefaultTableModel modeloTablaDirectivos = new DefaultTableModel();
    
    // Instancia de los objetos para invocar los métodos de la lógica y los objetos para almacenar los datos
    
    private LogicaJugadores lj;
    private LogicaDirectivos ld;
    private LogicaEntrenadores le;
    private LogicaMantenedores lm;
    
    private Jugadores j;
    private Entrenadores e;
    private Mantenedores m;
    private Directivos d;
    private Personal p;
    
    
    // Variables de Jugadores
    
    String nombreJ; 
    String dniJ; 
    String dirJ; 
    String telefJ;
    String fechaJ;
    
    // Variables de Entrenadores
    
    String nombreE; 
    String dniE; 
    String dirE; 
    String telefE;
    String fechaE;
    
    // Variables de Mantenedores
    
    String nombreM; 
    String dniM; 
    String dirM; 
    String telefM;
    String fechaM;
    String ganadosM;
    
    // Variables de Directivos
    
    String nombreD; 
    String dniD; 
    String dirD; 
    String telefD;
    String fechaD;
    String ganadosD;
    String sueldoD;

    /**
     * Creates new form main_ClubDeportivo
     * @param <error>
     */
    public main_ClubDeportivo() {
        this.setLocationRelativeTo(null);
        
        initComponents();
        
        modeloTablaJugadores.addColumn("NOMBRE"); 
        modeloTablaJugadores.addColumn("DIRECCIÓN");
        modeloTablaJugadores.addColumn("DNI");
        modeloTablaJugadores.addColumn("TELÉFONO");
        modeloTablaJugadores.addColumn("PARTIDOS GANADOS");
        modeloTablaJugadores.addColumn("POSICIÓN");
        modeloTablaJugadores.addColumn("GOLES");
        modeloTablaJugadores.addColumn("SUELDO");
        modeloTablaJugadores.addColumn("FECHA DE NACIMIENTO");
        
        modeloTablaDirectivos.addColumn("NOMBRE");
        modeloTablaDirectivos.addColumn("DIRECCIÓN");
        modeloTablaDirectivos.addColumn("DNI");
        modeloTablaDirectivos.addColumn("TELÉFONO");
        modeloTablaDirectivos.addColumn("CARGO");
        modeloTablaDirectivos.addColumn("SUELDO");
        modeloTablaDirectivos.addColumn("ACTIVO");
        modeloTablaDirectivos.addColumn("FECHA DE NACIMIENTO");
        
        modeloTablaEntrenadores.addColumn("NOMBRE");
        modeloTablaEntrenadores.addColumn("DIRECCIÓN");
        modeloTablaEntrenadores.addColumn("DNI");
        modeloTablaEntrenadores.addColumn("TELÉFONO");
        modeloTablaEntrenadores.addColumn("PARTIDOS GANADOS");
        modeloTablaEntrenadores.addColumn("SUELDO");
        modeloTablaEntrenadores.addColumn("FECHA DE NACIMIENTO");
        
        modeloTablaMantenedores.addColumn("NOMBRE");
        modeloTablaMantenedores.addColumn("DIRECCIÓN");
        modeloTablaMantenedores.addColumn("DNI");
        modeloTablaMantenedores.addColumn("TELÉFONO");
        modeloTablaMantenedores.addColumn("SUELDO");
        modeloTablaMantenedores.addColumn("FIJO");
        modeloTablaMantenedores.addColumn("FECHA DE NACIMIENTO");
         
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        PosicionesJugadores = new javax.swing.ButtonGroup();
        cargoDirectivos = new javax.swing.ButtonGroup();
        jTabbedPane = new javax.swing.JTabbedPane();
        jPanelJugadores = new javax.swing.JPanel();
        lblNombre = new javax.swing.JLabel();
        lblDni = new javax.swing.JLabel();
        lblDireccion = new javax.swing.JLabel();
        lbltelefono = new javax.swing.JLabel();
        txtNombreJ = new javax.swing.JTextField();
        txtDniJ = new javax.swing.JTextField();
        txtDireccionJ = new javax.swing.JTextField();
        txtTelefonoJ = new javax.swing.JTextField();
        lblPosicion = new javax.swing.JLabel();
        rbtnPortero = new javax.swing.JRadioButton();
        rbtnDefensa = new javax.swing.JRadioButton();
        rbtnMedio = new javax.swing.JRadioButton();
        rbtnDelantero = new javax.swing.JRadioButton();
        lblSueldoJ = new javax.swing.JLabel();
        txtSueldoJ = new javax.swing.JTextField();
        lblNumGoles = new javax.swing.JLabel();
        txtNumGoles = new javax.swing.JTextField();
        btnGrabarJ = new javax.swing.JButton();
        jScrollPane1 = new javax.swing.JScrollPane();
        jTablaJugadores = new javax.swing.JTable();
        txtPartidosGanadosJ = new javax.swing.JTextField();
        lblPartidosGanados = new javax.swing.JLabel();
        lblFechanNacimientoJ = new javax.swing.JLabel();
        txtFechaNacimientoJ = new javax.swing.JTextField();
        btnBorrarJ = new javax.swing.JButton();
        jPanelMantenedores = new javax.swing.JPanel();
        lblNombreM = new javax.swing.JLabel();
        lblDniM = new javax.swing.JLabel();
        lblDireccionM = new javax.swing.JLabel();
        lbltelefonoM = new javax.swing.JLabel();
        txtNombreM = new javax.swing.JTextField();
        txtDniM = new javax.swing.JTextField();
        txtDireccionM = new javax.swing.JTextField();
        txtTelefonoM = new javax.swing.JTextField();
        jScrollPane4 = new javax.swing.JScrollPane();
        jTablaMantenedores = new javax.swing.JTable();
        btnInsertarM = new javax.swing.JButton();
        lblSueldoJ2 = new javax.swing.JLabel();
        txtSueldoM = new javax.swing.JTextField();
        checkFijo = new javax.swing.JCheckBox();
        lblPartidosGanadosM = new javax.swing.JLabel();
        txtPartidosGanadosM = new javax.swing.JTextField();
        lblFechanNacimientoM = new javax.swing.JLabel();
        txtFechaNacimientoM = new javax.swing.JTextField();
        btnBorrarM = new javax.swing.JButton();
        jPanelDirectivos = new javax.swing.JPanel();
        lblNombreD = new javax.swing.JLabel();
        lblDniD = new javax.swing.JLabel();
        lblDireccionD = new javax.swing.JLabel();
        lbltelefonoD = new javax.swing.JLabel();
        txtNombreD = new javax.swing.JTextField();
        txtDniD = new javax.swing.JTextField();
        txtDireccionD = new javax.swing.JTextField();
        txtTelefonoD = new javax.swing.JTextField();
        jScrollPane2 = new javax.swing.JScrollPane();
        jTableDir = new javax.swing.JTable();
        btnGrabarD = new javax.swing.JButton();
        rbtnPresi = new javax.swing.JRadioButton();
        rbtnDelegado = new javax.swing.JRadioButton();
        rbtnSecretario = new javax.swing.JRadioButton();
        lblCargo = new javax.swing.JLabel();
        lblSueldo = new javax.swing.JLabel();
        txtSueldoD = new javax.swing.JTextField();
        checkActivo = new javax.swing.JCheckBox();
        lblFechaNacimientoD = new javax.swing.JLabel();
        txtFechaNacimientoD = new javax.swing.JTextField();
        lblGanadosD = new javax.swing.JLabel();
        txtPartidosGanadosD = new javax.swing.JTextField();
        btnBorrarD = new javax.swing.JButton();
        jPanelEntrenadores = new javax.swing.JPanel();
        lblNombreE = new javax.swing.JLabel();
        lblDniE = new javax.swing.JLabel();
        lblDireccionE = new javax.swing.JLabel();
        lbltelefonoE = new javax.swing.JLabel();
        txtNombreE = new javax.swing.JTextField();
        txtDniE = new javax.swing.JTextField();
        txtDireccionE = new javax.swing.JTextField();
        txtTelefonoE = new javax.swing.JTextField();
        jScrollPane3 = new javax.swing.JScrollPane();
        jTablaEntrenadores = new javax.swing.JTable();
        btnGrabarE = new javax.swing.JButton();
        lblSueldoJ1 = new javax.swing.JLabel();
        txtSueldoE = new javax.swing.JTextField();
        txtPartidosGanadosE = new javax.swing.JTextField();
        lblPartidosGanados1 = new javax.swing.JLabel();
        jLabel1 = new javax.swing.JLabel();
        txtFechaNacimientoE = new javax.swing.JTextField();
        btnBorrarE = new javax.swing.JButton();
        menuBar = new javax.swing.JMenuBar();
        jMenuArchivos = new javax.swing.JMenu();
        jMenuInsertar = new javax.swing.JMenuItem();
        jMenuES = new javax.swing.JMenu();
        jMenuItemES = new javax.swing.JMenuItem();
        jMenubtnSalir = new javax.swing.JMenu();
        jMenuItemSalir = new javax.swing.JMenuItem();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setResizable(false);

        lblNombre.setText("Nombre:");

        lblDni.setText("DNI:");

        lblDireccion.setText("Dirección:");

        lbltelefono.setText("Teléfono:");

        lblPosicion.setText("Posición:");

        PosicionesJugadores.add(rbtnPortero);
        rbtnPortero.setText("Portero");

        PosicionesJugadores.add(rbtnDefensa);
        rbtnDefensa.setText("Defensa");

        PosicionesJugadores.add(rbtnMedio);
        rbtnMedio.setText("Mediocentro");

        PosicionesJugadores.add(rbtnDelantero);
        rbtnDelantero.setText("Delantero");

        lblSueldoJ.setText("Sueldo:");

        lblNumGoles.setText("Número de goles");

        btnGrabarJ.setText("Insertar");
        btnGrabarJ.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnGrabarJActionPerformed(evt);
            }
        });

        jTablaJugadores.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "Nombre", "Dirección", "DNI", "Teléfono", "Partidos ganados", "Posición", "Goles", "Sueldo", "Fecha de nacimiento"
            }
        ) {
            Class[] types = new Class [] {
                java.lang.String.class, java.lang.String.class, java.lang.String.class, java.lang.String.class, java.lang.String.class, java.lang.String.class, java.lang.String.class, java.lang.String.class, java.lang.String.class
            };

            public Class getColumnClass(int columnIndex) {
                return types [columnIndex];
            }
        });
        jScrollPane1.setViewportView(jTablaJugadores);

        lblPartidosGanados.setText("Partidos ganados");

        lblFechanNacimientoJ.setText("Fecha de nacimiento");

        btnBorrarJ.setText("Borrar");
        btnBorrarJ.setEnabled(false);
        btnBorrarJ.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnBorrarJActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanelJugadoresLayout = new javax.swing.GroupLayout(jPanelJugadores);
        jPanelJugadores.setLayout(jPanelJugadoresLayout);
        jPanelJugadoresLayout.setHorizontalGroup(
            jPanelJugadoresLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jScrollPane1, javax.swing.GroupLayout.Alignment.TRAILING)
            .addGroup(jPanelJugadoresLayout.createSequentialGroup()
                .addGap(21, 21, 21)
                .addGroup(jPanelJugadoresLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addGroup(jPanelJugadoresLayout.createSequentialGroup()
                        .addGroup(jPanelJugadoresLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(lblNombre)
                            .addComponent(lblDni)
                            .addComponent(lblDireccion)
                            .addComponent(lbltelefono))
                        .addGap(25, 25, 25)
                        .addGroup(jPanelJugadoresLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addComponent(txtNombreJ, javax.swing.GroupLayout.DEFAULT_SIZE, 186, Short.MAX_VALUE)
                            .addComponent(txtDniJ, javax.swing.GroupLayout.PREFERRED_SIZE, 100, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(txtDireccionJ)
                            .addComponent(txtTelefonoJ, javax.swing.GroupLayout.PREFERRED_SIZE, 100, javax.swing.GroupLayout.PREFERRED_SIZE)))
                    .addGroup(jPanelJugadoresLayout.createSequentialGroup()
                        .addComponent(lblFechanNacimientoJ)
                        .addGap(33, 33, 33)
                        .addComponent(txtFechaNacimientoJ)))
                .addGap(57, 57, 57)
                .addComponent(lblPosicion)
                .addGap(8, 8, 8)
                .addGroup(jPanelJugadoresLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanelJugadoresLayout.createSequentialGroup()
                        .addGroup(jPanelJugadoresLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(jPanelJugadoresLayout.createSequentialGroup()
                                .addGroup(jPanelJugadoresLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addGroup(jPanelJugadoresLayout.createSequentialGroup()
                                        .addComponent(rbtnPortero)
                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                        .addComponent(lblSueldoJ))
                                    .addGroup(jPanelJugadoresLayout.createSequentialGroup()
                                        .addComponent(rbtnDefensa)
                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                        .addComponent(lblNumGoles)))
                                .addGap(18, 18, 18))
                            .addGroup(jPanelJugadoresLayout.createSequentialGroup()
                                .addComponent(rbtnMedio)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 321, Short.MAX_VALUE)
                                .addComponent(lblPartidosGanados)
                                .addGap(15, 15, 15)))
                        .addGroup(jPanelJugadoresLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addComponent(txtPartidosGanadosJ, javax.swing.GroupLayout.DEFAULT_SIZE, 115, Short.MAX_VALUE)
                            .addComponent(txtSueldoJ)
                            .addComponent(txtNumGoles))
                        .addGroup(jPanelJugadoresLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(jPanelJugadoresLayout.createSequentialGroup()
                                .addGap(40, 40, 40)
                                .addComponent(btnGrabarJ))
                            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanelJugadoresLayout.createSequentialGroup()
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(btnBorrarJ))))
                    .addGroup(jPanelJugadoresLayout.createSequentialGroup()
                        .addComponent(rbtnDelantero)
                        .addGap(0, 0, Short.MAX_VALUE)))
                .addContainerGap())
        );
        jPanelJugadoresLayout.setVerticalGroup(
            jPanelJugadoresLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanelJugadoresLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanelJugadoresLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(lblNombre)
                    .addComponent(txtNombreJ, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(lblPosicion)
                    .addComponent(rbtnPortero)
                    .addComponent(lblSueldoJ)
                    .addComponent(txtSueldoJ, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(btnGrabarJ))
                .addGroup(jPanelJugadoresLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanelJugadoresLayout.createSequentialGroup()
                        .addGap(24, 24, 24)
                        .addGroup(jPanelJugadoresLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(lblDni)
                            .addComponent(txtDniJ, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(lblNumGoles)
                            .addComponent(txtNumGoles, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(btnBorrarJ)))
                    .addGroup(jPanelJugadoresLayout.createSequentialGroup()
                        .addGap(18, 18, 18)
                        .addComponent(rbtnDefensa)))
                .addGroup(jPanelJugadoresLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanelJugadoresLayout.createSequentialGroup()
                        .addGap(33, 33, 33)
                        .addGroup(jPanelJugadoresLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(lblDireccion)
                            .addComponent(txtDireccionJ, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(txtPartidosGanadosJ, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(lblPartidosGanados)))
                    .addGroup(jPanelJugadoresLayout.createSequentialGroup()
                        .addGap(18, 18, 18)
                        .addComponent(rbtnMedio)))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(rbtnDelantero)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(jPanelJugadoresLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(lbltelefono)
                    .addComponent(txtTelefonoJ, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addGroup(jPanelJugadoresLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(lblFechanNacimientoJ)
                    .addComponent(txtFechaNacimientoJ, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 23, Short.MAX_VALUE)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 253, javax.swing.GroupLayout.PREFERRED_SIZE))
        );

        jTabbedPane.addTab("Jugadores", jPanelJugadores);

        lblNombreM.setText("Nombre:");

        lblDniM.setText("DNI:");

        lblDireccionM.setText("Dirección:");

        lbltelefonoM.setText("Teléfono:");

        jTablaMantenedores.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "Nombre", "Dirección", "DNI", "Teléfono", "Partidos ganados", "Sueldo", "Fijo", "Fecha de nacimiento"
            }
        ) {
            Class[] types = new Class [] {
                java.lang.String.class, java.lang.String.class, java.lang.String.class, java.lang.String.class, java.lang.String.class, java.lang.String.class, java.lang.String.class, java.lang.String.class
            };

            public Class getColumnClass(int columnIndex) {
                return types [columnIndex];
            }
        });
        jScrollPane4.setViewportView(jTablaMantenedores);

        btnInsertarM.setText("Insertar");
        btnInsertarM.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnInsertarMActionPerformed(evt);
            }
        });

        lblSueldoJ2.setText("Sueldo:");

        checkFijo.setText("Fijo");

        lblPartidosGanadosM.setText("Partidos gandos:");

        lblFechanNacimientoM.setText("Fecha de nacimiento");

        btnBorrarM.setText("Borrar");
        btnBorrarM.setEnabled(false);
        btnBorrarM.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnBorrarMActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanelMantenedoresLayout = new javax.swing.GroupLayout(jPanelMantenedores);
        jPanelMantenedores.setLayout(jPanelMantenedoresLayout);
        jPanelMantenedoresLayout.setHorizontalGroup(
            jPanelMantenedoresLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanelMantenedoresLayout.createSequentialGroup()
                .addGap(21, 21, 21)
                .addGroup(jPanelMantenedoresLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addGroup(jPanelMantenedoresLayout.createSequentialGroup()
                        .addComponent(lblFechanNacimientoM)
                        .addGap(33, 33, 33)
                        .addComponent(txtFechaNacimientoM))
                    .addGroup(jPanelMantenedoresLayout.createSequentialGroup()
                        .addGroup(jPanelMantenedoresLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(lblNombreM)
                            .addComponent(lblDniM)
                            .addComponent(lblDireccionM)
                            .addComponent(lbltelefonoM))
                        .addGap(25, 25, 25)
                        .addGroup(jPanelMantenedoresLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addComponent(txtNombreM)
                            .addComponent(txtDniM, javax.swing.GroupLayout.PREFERRED_SIZE, 100, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(txtDireccionM, javax.swing.GroupLayout.PREFERRED_SIZE, 186, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(txtTelefonoM, javax.swing.GroupLayout.PREFERRED_SIZE, 100, javax.swing.GroupLayout.PREFERRED_SIZE))))
                .addGap(237, 237, 237)
                .addGroup(jPanelMantenedoresLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addComponent(lblSueldoJ2)
                    .addComponent(lblPartidosGanadosM))
                .addGap(18, 18, 18)
                .addGroup(jPanelMantenedoresLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(txtSueldoM, javax.swing.GroupLayout.DEFAULT_SIZE, 274, Short.MAX_VALUE)
                    .addComponent(txtPartidosGanadosM))
                .addGroup(jPanelMantenedoresLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanelMantenedoresLayout.createSequentialGroup()
                        .addGap(156, 156, 156)
                        .addGroup(jPanelMantenedoresLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(btnInsertarM)
                            .addComponent(checkFijo)))
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanelMantenedoresLayout.createSequentialGroup()
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(btnBorrarM)))
                .addContainerGap())
            .addComponent(jScrollPane4, javax.swing.GroupLayout.Alignment.TRAILING)
        );
        jPanelMantenedoresLayout.setVerticalGroup(
            jPanelMantenedoresLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanelMantenedoresLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanelMantenedoresLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(lblNombreM)
                    .addComponent(txtNombreM, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(btnInsertarM)
                    .addComponent(lblSueldoJ2)
                    .addComponent(txtSueldoM, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGroup(jPanelMantenedoresLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanelMantenedoresLayout.createSequentialGroup()
                        .addGap(22, 22, 22)
                        .addGroup(jPanelMantenedoresLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(lblDniM)
                            .addComponent(txtDniM, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(lblPartidosGanadosM)
                            .addComponent(txtPartidosGanadosM, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)))
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanelMantenedoresLayout.createSequentialGroup()
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(btnBorrarM)))
                .addGroup(jPanelMantenedoresLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanelMantenedoresLayout.createSequentialGroup()
                        .addGap(32, 32, 32)
                        .addGroup(jPanelMantenedoresLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(lblDireccionM)
                            .addComponent(txtDireccionM, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)))
                    .addGroup(jPanelMantenedoresLayout.createSequentialGroup()
                        .addGap(18, 18, 18)
                        .addComponent(checkFijo)))
                .addGap(26, 26, 26)
                .addGroup(jPanelMantenedoresLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(lbltelefonoM)
                    .addComponent(txtTelefonoM, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 35, Short.MAX_VALUE)
                .addGroup(jPanelMantenedoresLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(lblFechanNacimientoM)
                    .addComponent(txtFechaNacimientoM, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addComponent(jScrollPane4, javax.swing.GroupLayout.PREFERRED_SIZE, 253, javax.swing.GroupLayout.PREFERRED_SIZE))
        );

        jTabbedPane.addTab("Mantenedores", jPanelMantenedores);

        lblNombreD.setText("Nombre:");

        lblDniD.setText("DNI:");

        lblDireccionD.setText("Dirección:");

        lbltelefonoD.setText("Teléfono:");

        jTableDir.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "Nombre", "Dirección", "DNI", "Teléfono", "Cargo", "Sueldo", "Activo", "Fecha de nacimiento"
            }
        ));
        jScrollPane2.setViewportView(jTableDir);

        btnGrabarD.setText("Insertar");
        btnGrabarD.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnGrabarDActionPerformed(evt);
            }
        });

        cargoDirectivos.add(rbtnPresi);
        rbtnPresi.setText("Presidente");

        cargoDirectivos.add(rbtnDelegado);
        rbtnDelegado.setText("Delegado");

        cargoDirectivos.add(rbtnSecretario);
        rbtnSecretario.setText("Secretario");

        lblCargo.setText("Cargo:");

        lblSueldo.setText("Sueldo");

        checkActivo.setText("Activo");

        lblFechaNacimientoD.setText("Fecha de nacimiento");

        lblGanadosD.setText("Partidos ganados:");

        btnBorrarD.setText("Borrar");
        btnBorrarD.setEnabled(false);
        btnBorrarD.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnBorrarDActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanelDirectivosLayout = new javax.swing.GroupLayout(jPanelDirectivos);
        jPanelDirectivos.setLayout(jPanelDirectivosLayout);
        jPanelDirectivosLayout.setHorizontalGroup(
            jPanelDirectivosLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jScrollPane2, javax.swing.GroupLayout.Alignment.TRAILING)
            .addGroup(jPanelDirectivosLayout.createSequentialGroup()
                .addGap(21, 21, 21)
                .addGroup(jPanelDirectivosLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(lblNombreD)
                    .addComponent(lblDniD)
                    .addComponent(lblDireccionD)
                    .addComponent(lbltelefonoD)
                    .addComponent(lblFechaNacimientoD))
                .addGap(25, 25, 25)
                .addGroup(jPanelDirectivosLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(txtNombreD)
                    .addComponent(txtDniD, javax.swing.GroupLayout.PREFERRED_SIZE, 100, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(txtDireccionD, javax.swing.GroupLayout.DEFAULT_SIZE, 186, Short.MAX_VALUE)
                    .addComponent(txtTelefonoD, javax.swing.GroupLayout.PREFERRED_SIZE, 100, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(txtFechaNacimientoD))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 331, Short.MAX_VALUE)
                .addGroup(jPanelDirectivosLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(lblCargo)
                    .addComponent(lblSueldo)
                    .addComponent(lblGanadosD))
                .addGap(69, 69, 69)
                .addGroup(jPanelDirectivosLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addGroup(jPanelDirectivosLayout.createSequentialGroup()
                        .addGroup(jPanelDirectivosLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addGroup(jPanelDirectivosLayout.createSequentialGroup()
                                .addComponent(rbtnPresi)
                                .addGap(151, 151, 151)
                                .addComponent(btnGrabarD))
                            .addComponent(txtSueldoD, javax.swing.GroupLayout.PREFERRED_SIZE, 115, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addGroup(jPanelDirectivosLayout.createSequentialGroup()
                                .addComponent(rbtnDelegado)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                .addComponent(btnBorrarD))
                            .addComponent(txtPartidosGanadosD, javax.swing.GroupLayout.PREFERRED_SIZE, 115, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addContainerGap())
                    .addGroup(jPanelDirectivosLayout.createSequentialGroup()
                        .addComponent(rbtnSecretario)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(checkActivo)
                        .addGap(18, 18, 18))))
        );
        jPanelDirectivosLayout.setVerticalGroup(
            jPanelDirectivosLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanelDirectivosLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanelDirectivosLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addGroup(jPanelDirectivosLayout.createSequentialGroup()
                        .addGroup(jPanelDirectivosLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(jPanelDirectivosLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                                .addComponent(lblNombreD)
                                .addComponent(txtNombreD, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addComponent(btnGrabarD))
                        .addGroup(jPanelDirectivosLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(jPanelDirectivosLayout.createSequentialGroup()
                                .addGap(21, 21, 21)
                                .addGroup(jPanelDirectivosLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                                    .addComponent(lblDniD)
                                    .addComponent(txtDniD, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)))
                            .addGroup(jPanelDirectivosLayout.createSequentialGroup()
                                .addGap(18, 18, 18)
                                .addComponent(btnBorrarD)))
                        .addGap(31, 31, 31))
                    .addGroup(jPanelDirectivosLayout.createSequentialGroup()
                        .addGroup(jPanelDirectivosLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(rbtnPresi)
                            .addComponent(lblCargo))
                        .addGap(18, 18, 18)
                        .addComponent(rbtnDelegado)
                        .addGap(18, 18, 18)))
                .addGroup(jPanelDirectivosLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(lblDireccionD)
                    .addComponent(txtDireccionD, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(rbtnSecretario)
                    .addComponent(checkActivo))
                .addGap(24, 24, 24)
                .addGroup(jPanelDirectivosLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(lbltelefonoD)
                    .addComponent(txtTelefonoD, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(lblSueldo)
                    .addComponent(txtSueldoD, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 38, Short.MAX_VALUE)
                .addGroup(jPanelDirectivosLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(lblFechaNacimientoD)
                    .addComponent(txtFechaNacimientoD, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(lblGanadosD)
                    .addComponent(txtPartidosGanadosD, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, 251, javax.swing.GroupLayout.PREFERRED_SIZE))
        );

        jTabbedPane.addTab("Directivos", jPanelDirectivos);

        lblNombreE.setText("Nombre:");

        lblDniE.setText("DNI:");

        lblDireccionE.setText("Dirección:");

        lbltelefonoE.setText("Teléfono:");

        jTablaEntrenadores.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "Nombre", "Dirección", "DNI", "Teléfono", "Partidos ganados", "Sueldo", "Fecha de nacimiento"
            }
        ) {
            Class[] types = new Class [] {
                java.lang.String.class, java.lang.String.class, java.lang.String.class, java.lang.String.class, java.lang.String.class, java.lang.String.class, java.lang.Object.class
            };

            public Class getColumnClass(int columnIndex) {
                return types [columnIndex];
            }
        });
        jScrollPane3.setViewportView(jTablaEntrenadores);

        btnGrabarE.setText("Insertar");
        btnGrabarE.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnGrabarEActionPerformed(evt);
            }
        });

        lblSueldoJ1.setText("Sueldo:");

        lblPartidosGanados1.setText("Partidos ganados");

        jLabel1.setText("Fecha de nacimiento:");

        btnBorrarE.setText("Borrar");
        btnBorrarE.setEnabled(false);
        btnBorrarE.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnBorrarEActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanelEntrenadoresLayout = new javax.swing.GroupLayout(jPanelEntrenadores);
        jPanelEntrenadores.setLayout(jPanelEntrenadoresLayout);
        jPanelEntrenadoresLayout.setHorizontalGroup(
            jPanelEntrenadoresLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanelEntrenadoresLayout.createSequentialGroup()
                .addGroup(jPanelEntrenadoresLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanelEntrenadoresLayout.createSequentialGroup()
                        .addContainerGap()
                        .addComponent(jLabel1))
                    .addGroup(jPanelEntrenadoresLayout.createSequentialGroup()
                        .addGap(21, 21, 21)
                        .addGroup(jPanelEntrenadoresLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                            .addComponent(lbltelefonoE)
                            .addGroup(jPanelEntrenadoresLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                .addComponent(lblNombreE)
                                .addComponent(lblDniE)
                                .addComponent(lblDireccionE)))))
                .addGap(36, 36, 36)
                .addGroup(jPanelEntrenadoresLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(txtNombreE)
                    .addComponent(txtDniE, javax.swing.GroupLayout.PREFERRED_SIZE, 100, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(txtDireccionE, javax.swing.GroupLayout.DEFAULT_SIZE, 186, Short.MAX_VALUE)
                    .addComponent(txtTelefonoE, javax.swing.GroupLayout.PREFERRED_SIZE, 100, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(txtFechaNacimientoE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addGroup(jPanelEntrenadoresLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(lblSueldoJ1, javax.swing.GroupLayout.Alignment.TRAILING)
                    .addComponent(lblPartidosGanados1, javax.swing.GroupLayout.Alignment.TRAILING))
                .addGap(26, 26, 26)
                .addGroup(jPanelEntrenadoresLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(txtPartidosGanadosE)
                    .addComponent(txtSueldoE, javax.swing.GroupLayout.PREFERRED_SIZE, 115, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGroup(jPanelEntrenadoresLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanelEntrenadoresLayout.createSequentialGroup()
                        .addGap(147, 147, 147)
                        .addComponent(btnGrabarE))
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanelEntrenadoresLayout.createSequentialGroup()
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(btnBorrarE)))
                .addContainerGap())
            .addComponent(jScrollPane3, javax.swing.GroupLayout.DEFAULT_SIZE, 1126, Short.MAX_VALUE)
        );
        jPanelEntrenadoresLayout.setVerticalGroup(
            jPanelEntrenadoresLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanelEntrenadoresLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanelEntrenadoresLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanelEntrenadoresLayout.createSequentialGroup()
                        .addGroup(jPanelEntrenadoresLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(lblNombreE)
                            .addComponent(txtNombreE, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(btnGrabarE))
                        .addGap(42, 42, 42)
                        .addGroup(jPanelEntrenadoresLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(lblDniE)
                            .addComponent(txtDniE, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)))
                    .addGroup(jPanelEntrenadoresLayout.createSequentialGroup()
                        .addGroup(jPanelEntrenadoresLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(lblSueldoJ1, javax.swing.GroupLayout.Alignment.TRAILING)
                            .addComponent(txtSueldoE, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(31, 31, 31)
                        .addGroup(jPanelEntrenadoresLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(txtPartidosGanadosE, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(lblPartidosGanados1)
                            .addComponent(btnBorrarE))))
                .addGap(32, 32, 32)
                .addGroup(jPanelEntrenadoresLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(lblDireccionE)
                    .addComponent(txtDireccionE, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(26, 26, 26)
                .addGroup(jPanelEntrenadoresLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(lbltelefonoE)
                    .addComponent(txtTelefonoE, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addGroup(jPanelEntrenadoresLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel1)
                    .addComponent(txtFechaNacimientoE, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addComponent(jScrollPane3, javax.swing.GroupLayout.PREFERRED_SIZE, 264, javax.swing.GroupLayout.PREFERRED_SIZE))
        );

        jTabbedPane.addTab("Entrenadores", jPanelEntrenadores);

        jMenuArchivos.setText("Archivos");

        jMenuInsertar.setText("Insertar");
        jMenuInsertar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jMenuInsertarActionPerformed(evt);
            }
        });
        jMenuArchivos.add(jMenuInsertar);

        menuBar.add(jMenuArchivos);

        jMenuES.setText("E/S archivos");

        jMenuItemES.setText("E/S");
        jMenuItemES.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jMenuItemESActionPerformed(evt);
            }
        });
        jMenuES.add(jMenuItemES);

        menuBar.add(jMenuES);

        jMenubtnSalir.setText("Salir");

        jMenuItemSalir.setText("Salir");
        jMenuItemSalir.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jMenuItemSalirActionPerformed(evt);
            }
        });
        jMenubtnSalir.add(jMenuItemSalir);

        menuBar.add(jMenubtnSalir);

        setJMenuBar(menuBar);

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jTabbedPane, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addComponent(jTabbedPane, javax.swing.GroupLayout.PREFERRED_SIZE, 528, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(0, 0, Short.MAX_VALUE))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void btnGrabarJActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnGrabarJActionPerformed
        // Botón que recoge el texto de los campos del padded de jugadores y los valida.
        // Si pasan la validación, los introduce en la tabla y formatea la fecha a tipo Date
        // para pasárselos al modelo y posteriormente al controlador a través de un método
        // que recoge el objeto de tipo Jugadores y lo almacena en una ArrayListl.
        // Si un dato no es correcto al insertar en la tabla, el campo ganará el foco 
        // y se pondrá en rojo hasta que el dato se valide correctamente.
        if (txtNombreJ.getText().equals("") || !validaNombre(txtNombreJ.getText())) {
            JOptionPane.showMessageDialog(rootPane, "El campo de nombre no puede quedar vacío y no debe contener números.");
            txtNombreJ.setBackground(Color.red);
            txtNombreJ.requestFocus();
        } else if (txtDireccionJ.getText().equals("")) {
            JOptionPane.showMessageDialog(rootPane, "El campo de dirección no puede quedar vacío.");
            txtDireccionJ.setBackground(Color.red);
            txtDireccionJ.requestFocus();
        } else if (txtDniJ.getText().equals("") || !validarDni(txtDniJ.getText())) {
            JOptionPane.showMessageDialog(rootPane, "El campo de DNI no puede quedar vacío y debe complir el formato de 8 n''umeros y una letra válida.");  
            txtDniJ.setBackground(Color.red);
            txtDniJ.requestFocus();
        } else if (txtTelefonoJ.getText().equals("")|| !validarTelefono(txtTelefonoJ.getText())) {
            JOptionPane.showMessageDialog(rootPane, "El campo del teléfono no puede quedar vacío y debe de tener el formato de 9 números estándar."); 
            txtTelefonoJ.setBackground(Color.red);
            txtTelefonoJ.requestFocus();
        } else if (txtPartidosGanadosJ.getText().equals("")|| !validaNum(txtPartidosGanadosJ.getText())) {
            JOptionPane.showMessageDialog(rootPane, "El campo del partidos ganados no puede quedar vacío y debe de contener solo números."); 
            txtPartidosGanadosJ.setBackground(Color.red);
            txtPartidosGanadosJ.requestFocus();
        } else if (txtNumGoles.getText().equals("") || !validaNum(txtNumGoles.getText())) {
            JOptionPane.showMessageDialog(rootPane, "El campo del número de goles no puede quedar vacío y debe de contener solo números."); 
            txtNumGoles.setBackground(Color.red);
            txtNumGoles.requestFocus();
        } else if (txtSueldoJ.getText().equals("") || !validaNum(txtSueldoJ.getText())) {
            JOptionPane.showMessageDialog(rootPane, "El campo del sueldo no puede quedar vacío y debe de contener solo números en formato decimal."); 
            txtSueldoJ.setBackground(Color.red);
            txtSueldoJ.requestFocus();
        } else if (PosicionesJugadores.isSelected(null)) {
            JOptionPane.showMessageDialog(rootPane, "Debes de seleccionar una posición del campo para el juagdor antes de continuar."); 
        } else if (txtFechaNacimientoJ.getText().equals("") || !validaFecha(txtFechaNacimientoJ.getText())) {
            JOptionPane.showMessageDialog(rootPane, "El campo fecha debe de ser una fecha con la máscara: XX/XX/XXXX."); 
            txtFechaNacimientoJ.setBackground(Color.red);
            txtFechaNacimientoJ.requestFocus();
        }else{
            try {
                txtDireccionJ.setBackground(Color.white);
                nombreJ = txtNombreJ.getText().toString();
                dniJ = txtDireccionJ.getText().toString();
                dirJ = txtDniJ.getText().toString();
                telefJ = txtTelefonoJ.getText().toString();
                fechaJ =  txtFechaNacimientoJ.getText().toString();
                //Pon la fecha de nacimiento, mamón
                int partidosGanados = Integer.parseInt(txtPartidosGanadosJ.getText());
                int plusPartidosGanados = 100;
                int numGoles = Integer.parseInt(txtNumGoles.getText());
                int plusGol = 200;
                int sueldo = Integer.parseInt(txtSueldoJ.getText());
                
                int sueldoFinal = sueldo + (partidosGanados * plusPartidosGanados) + (numGoles * plusGol);
                System.out.println(sueldoFinal);
                
                String pos = "";
                
                if (rbtnPortero.isSelected()) {
                    pos = "Portero";
                } else if(rbtnDefensa.isSelected()){
                    pos = "Defensa";
                } else if(rbtnMedio.isSelected()){
                    pos = "Mediocentro";
                } else if(rbtnDelantero.isSelected()){
                    pos = "Delantero";
                }
                
                System.out.println(pos);
                
                String matchWin = ""+partidosGanados;
                String suelFinal = ""+sueldoFinal;
                String goles = ""+numGoles;
                
                String vector[] = {nombreJ, dniJ, dirJ, telefJ, matchWin, pos, goles, suelFinal, fechaJ};
                modeloTablaJugadores.addRow(vector);
                jTablaJugadores.setModel(modeloTablaJugadores);
                
                SimpleDateFormat formato = new SimpleDateFormat("dd/MM/yyyy");
                
                Date dataFormateada = formato.parse(fechaJ);
                
                j = new Jugadores(pos, numGoles, sueldo, nombreJ, dniJ, telefJ, dirE, partidosGanados, dataFormateada);
                lj = new LogicaJugadores();
                lj.altaJugador(j);
                
                limpiar();
                btnBorrarJ.setEnabled(true);
            } catch (ParseException ex) {
                Logger.getLogger(main_ClubDeportivo.class.getName()).log(Level.SEVERE, null, ex);
            }
            
        }
        //Cuando se insertan los datos, se debe de hacer un clear de todos los campos a ddefeto
        
    }//GEN-LAST:event_btnGrabarJActionPerformed

    private void btnGrabarEActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnGrabarEActionPerformed
        //Entrenadores
        if (txtNombreE.getText().equals("") || !validaNombre(txtNombreE.getText())) {
            JOptionPane.showMessageDialog(rootPane, "El campo de nombre no puede quedar vacío y no debe contener números.");
            txtNombreE.setBackground(Color.red);
            txtNombreE.requestFocus();
        } else if (txtDireccionE.getText().equals("")) {
            JOptionPane.showMessageDialog(rootPane, "El campo de dirección no puede quedar vacío.");
            txtDireccionE.setBackground(Color.red);
            txtDireccionE.requestFocus();
        } else if (txtDniE.getText().equals("") || !validarDni(txtDniE.getText())) {
            JOptionPane.showMessageDialog(rootPane, "El campo de DNI no puede quedar vacío y debe complir el formato de 8 n''umeros y una letra válida.");  
            txtDireccionE.setBackground(Color.red);
            txtDireccionE.requestFocus();
        } else if (txtTelefonoE.getText().equals("") || !validarTelefono(txtTelefonoE.getText())) {
            JOptionPane.showMessageDialog(rootPane, "El campo del teléfono no puede quedar vacío y debe de tener el formato de 9 números estándar."); 
            txtTelefonoE.setBackground(Color.red);
            txtTelefonoE.requestFocus();
        } else if (txtPartidosGanadosE.getText().equals("") || !validaNum(txtPartidosGanadosE.getText())) {
            JOptionPane.showMessageDialog(rootPane, "El campo del partidos ganados no puede quedar vacío y no puede contener letras.");
            txtPartidosGanadosE.setBackground(Color.red);
        }  else if (txtSueldoE.getText().equals("")|| !validaNum(txtSueldoE.getText())) {
            JOptionPane.showMessageDialog(rootPane, "El campo del sueldo no puede quedar vacío y debe de contener solo números en formato decimal."); 
            txtSueldoE.requestFocus();
        } else if (txtFechaNacimientoE.getText().equals("") || !validaFecha(txtFechaNacimientoE.getText())) {
            JOptionPane.showMessageDialog(rootPane, "El campo fecha debe de ser una fecha con la máscara: XX/XX/XXXX."); 
            txtFechaNacimientoE.setBackground(Color.red);
            txtFechaNacimientoE.requestFocus();
        } else{
            try {
                txtDireccionE.setBackground(Color.white);
                nombreE = txtNombreE.getText().toString();
                dniE = txtDireccionE.getText().toString();
                dirE = txtDniE.getText().toString();
                telefE = txtTelefonoE.getText().toString();
                fechaE = txtFechaNacimientoE.getText().toString();
                int partidosGanados = Integer.parseInt(txtPartidosGanadosE.getText());
                int plusPartidosGanados = 100;
                int sueldo = Integer.parseInt(txtSueldoE.getText());
                
                float sueldoFinal = sueldo + (partidosGanados * plusPartidosGanados);
                System.out.println(sueldoFinal);
                
                String matchWin = ""+partidosGanados;
                String suelFinal = ""+sueldoFinal;
                
                String vector[] = {nombreE, dirE, dniE,  telefE, matchWin, suelFinal, fechaE};
                
                SimpleDateFormat formato = new SimpleDateFormat("dd/MM/yyyy");
                Date dataFormateada = formato.parse(fechaE);
                modeloTablaEntrenadores.addRow(vector);
                jTablaEntrenadores.setModel(modeloTablaEntrenadores);
                e = new Entrenadores(sueldo, nombreJ, dniJ, telefJ, dirE, partidosGanados, dataFormateada);
                le.altaEntrenador(e);
                limpiar();
                btnBorrarE.setEnabled(true);
            } catch (ParseException ex) {
                Logger.getLogger(main_ClubDeportivo.class.getName()).log(Level.SEVERE, null, ex);
            }
        }
        
    }//GEN-LAST:event_btnGrabarEActionPerformed

    private void btnInsertarMActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnInsertarMActionPerformed
        //Mantenedores
        if (txtNombreM.getText().equals("") || !validaNombre(txtNombreM.getText())) {
            JOptionPane.showMessageDialog(rootPane, "El campo de nombre no puede quedar vacío y no debe contener números.");
            txtNombreM.setBackground(Color.red);
            txtNombreM.requestFocus();
        } else if (txtDireccionM.getText().equals("")) {
            JOptionPane.showMessageDialog(rootPane, "El campo de dirección no puede quedar vacío.");
            txtDireccionM.setBackground(Color.red);
            txtDireccionM.requestFocus();
        } else if (txtDniM.getText().equals("") || !validarDni(txtDniM.getText())) {
            JOptionPane.showMessageDialog(rootPane, "El campo de DNI no puede quedar vacío y debe complir el formato de 8 n''umeros y una letra válida.");
            txtDniM.setBackground(Color.red);
            txtDniM.requestFocus();
        } else if (txtTelefonoM.getText().equals("") || !validarTelefono(txtTelefonoM.getText())) {
            JOptionPane.showMessageDialog(rootPane, "El campo del teléfono no puede quedar vacío y debe de tener el formato de 9 números estándar.");
            txtTelefonoM.setBackground(Color.red);
            txtTelefonoM.requestFocus();
        } else if (txtPartidosGanadosM.getText().equals("") || !validaNum(txtPartidosGanadosM.getText())) {
            JOptionPane.showMessageDialog(rootPane, "El campo del partidos ganados no puede quedar vacío y no puede contener letras.");
            txtPartidosGanadosM.setBackground(Color.red);
        } else if (txtSueldoM.getText().equals("") || !validaNum(txtSueldoM.getText())) {
            JOptionPane.showMessageDialog(rootPane, "El campo del sueldo no puede quedar vacío y debe de contener solo números.");
            txtSueldoM.setBackground(Color.red);
            txtSueldoM.requestFocus();
        } else if (txtFechaNacimientoM.getText().equals("") || !validaFecha(txtFechaNacimientoM.getText())) {
            JOptionPane.showMessageDialog(rootPane, "El campo fecha debe de ser una fecha con la máscara: XX/XX/XXXX");
            txtFechaNacimientoM.setBackground(Color.red);
            txtFechaNacimientoM.requestFocus();
        } else {
            try {
                txtDireccionM.setBackground(Color.white);
                nombreM = txtNombreM.getText().toString();
                dniM = txtDireccionM.getText().toString();
                dirM = txtDniM.getText().toString();
                telefM = txtTelefonoM.getText().toString();
                ganadosM = txtPartidosGanadosM.getText();
                txtFechaNacimientoM = txtFechaNacimientoM;
                int plusFijo = 100;
                int sueldo = Integer.parseInt(txtSueldoJ.getText());
                int partidos_ganados = Integer.parseInt(txtPartidosGanadosM.getText());
                String fijo;
                boolean fijoM;

                if (checkFijo.isSelected()) {
                    fijo = "Sí";
                    fijoM = true;
                    sueldo = sueldo + plusFijo;
                    //Mantenedores.setFijo();
                } else {
                    fijoM = false;
                    fijo = "No";
                    plusFijo = 0;
                }

                String suelFinal = "" + sueldo;

                String vector[] = {nombreM, dniM, dirM, telefM, suelFinal, fijo, fechaM};
                SimpleDateFormat formato = new SimpleDateFormat("dd/MM/yyyy");
                Date dataFormateada = formato.parse(fechaM);
                modeloTablaMantenedores.addRow(vector);
                jTablaMantenedores.setModel(modeloTablaMantenedores);
                m = new Mantenedores(fijoM, sueldo, nombreJ, dniJ, telefJ, dirE, partidos_ganados, dataFormateada);
                lm.altaMantenedor(m);
                btnBorrarD.setEnabled(true);
                limpiar();
            } catch (ParseException ex) {
                Logger.getLogger(main_ClubDeportivo.class.getName()).log(Level.SEVERE, null, ex);
            }
        }
        btnBorrarM.setEnabled(true);
        //Cuando se insertan los datos, se debe de hacer un clear de todos los campos a ddefeto
    }//GEN-LAST:event_btnInsertarMActionPerformed

    private void btnGrabarDActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnGrabarDActionPerformed
        if (txtNombreD.getText().equals("") || !validaNombre(txtNombreD.getText())) {
            JOptionPane.showMessageDialog(rootPane, "El campo de nombre no puede quedar vacío y no debe contener números.");
            txtNombreD.setBackground(Color.red);
        } else if (txtDireccionD.getText().equals("")) {
            JOptionPane.showMessageDialog(rootPane, "El campo de dirección no puede quedar vacío.");
            txtDireccionD.setBackground(Color.red);
        } else if (txtDniD.getText().equals("") || !validarDni(txtDniD.getText())) {
            JOptionPane.showMessageDialog(rootPane, "El campo de DNI no puede quedar vacío y debe complir el formato de 8 números y una letra válida.");  
            txtDniD.setBackground(Color.red);
        } else if (txtTelefonoD.getText().equals("") || !validarTelefono(txtTelefonoD.getText())) {
            JOptionPane.showMessageDialog(rootPane, "El campo del teléfono no puede quedar vacío y debe de tener el formato de 9 números estándar."); 
            txtTelefonoD.setBackground(Color.red);
        } else if (txtPartidosGanadosD.getText().equals("") || !validaNum(txtPartidosGanadosD.getText())) {
            JOptionPane.showMessageDialog(rootPane, "El campo del partidos ganados no puede quedar vacío y no puede contener letras.");
            txtPartidosGanadosD.setBackground(Color.red);
        } else if (txtSueldoD.getText().equals("")|| !validaNum(txtSueldoD.getText())) {
            JOptionPane.showMessageDialog(rootPane, "El campo del sueldo no puede quedar vacío y debe de contener solo números y debe de tener formato digital."); 
            txtSueldoD.setBackground(Color.red);
        }  else if (cargoDirectivos.isSelected(null)){
            JOptionPane.showMessageDialog(rootPane, "Debe de seleccionar un cargo para el directivo."); 
        } else if (txtFechaNacimientoD.getText().equals("") || !validaFecha(txtFechaNacimientoD.getText())) {
            JOptionPane.showMessageDialog(rootPane, "El campo fecha debe de ser una fecha con la máscara: XX/XX/XXXX."); 
            txtFechaNacimientoD.setBackground(Color.red);
            txtFechaNacimientoD.requestFocus();
        } else {
            try {
                txtDireccionD.setBackground(Color.white);
                nombreD = txtNombreD.getText().toString();
                dniD = txtDireccionD.getText().toString();
                dirD = txtDniD.getText().toString();
                telefD = txtTelefonoD.getText().toString();
                fechaD = txtFechaNacimientoD.getText().toString();
                ganadosD = txtPartidosGanadosM.getText().toString();
                sueldoD = txtSueldoD.getText().toString();
                String sueldo = txtSueldoD.getText().toString();
                
                String activo;
                boolean activoD;
                if(checkActivo.isSelected()){
                    activo = "Sí";
                    activoD = true;
                } else{
                    activo = "No";
                    activoD = false;
                }
                
                String cargo = "";
                
                if (rbtnPresi.isSelected()) {
                    cargo = "Presidente";
                } else if(rbtnDelegado.isSelected()){
                    cargo = "Delegado";
                } else if(rbtnSecretario.isSelected()){
                    cargo = "Secretario";
                }
                int pasarSueldo = Integer.parseInt(sueldoD);
                String vector[] = {nombreD, dirD, dniD, telefD, cargo, sueldo, activo, fechaD};
                SimpleDateFormat formato = new SimpleDateFormat("dd/MM/yyyy");
                Date dataFormateada = formato.parse(fechaD);
                modeloTablaDirectivos.addRow(vector);
                jTableDir.setModel(modeloTablaDirectivos);
                d = new Directivos(cargo, pasarSueldo, activoD, nombreJ, dniJ, telefJ, dirE, PROPERTIES, dataFormateada);
                ld.altaDirectivo(d);
                btnBorrarD.setEnabled(true);
                limpiar();
            } catch (ParseException ex) {
                Logger.getLogger(main_ClubDeportivo.class.getName()).log(Level.SEVERE, null, ex);
            }
        }
        
    }//GEN-LAST:event_btnGrabarDActionPerformed
    
    // Los métodos de borrar llaman al método que borra elementos y se encargan de activar o desactivar el botón borrar.
    
    private void btnBorrarJActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnBorrarJActionPerformed
        borrarElementoJugadores();
        if (modeloTablaJugadores.getRowCount() > 0) {
            btnBorrarJ.setEnabled(true);
        } else{
            btnBorrarJ.setEnabled(false);
        }
    }//GEN-LAST:event_btnBorrarJActionPerformed

    private void btnBorrarMActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnBorrarMActionPerformed
        borrarElementoMantenedores();
        if (modeloTablaMantenedores.getRowCount() > 0) {
            btnBorrarM.setEnabled(true);
        } else{
            btnBorrarM.setEnabled(false);
        }
    }//GEN-LAST:event_btnBorrarMActionPerformed

    private void btnBorrarDActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnBorrarDActionPerformed
        borrarElementoDirectivos();
        if (modeloTablaDirectivos.getRowCount() > 0) {
            btnBorrarD.setEnabled(true);
        } else{
            btnBorrarD.setEnabled(false);
        }
    }//GEN-LAST:event_btnBorrarDActionPerformed

    private void btnBorrarEActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnBorrarEActionPerformed
        borrarElementoEntrenadores();
        if (modeloTablaEntrenadores.getRowCount() > 0) {
            btnBorrarE.setEnabled(true);
        } else{
            btnBorrarE.setEnabled(false);
        }
    }//GEN-LAST:event_btnBorrarEActionPerformed

    // Funcionalidad del menú "Salir".
    
    private void jMenuItemSalirActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jMenuItemSalirActionPerformed
        JOptionPane.showMessageDialog(this, "Ha cerrado el programa. Hasta la próxima.");
        this.dispose();
    }//GEN-LAST:event_jMenuItemSalirActionPerformed

    // Este método se encarga de darle la funcionalidad al botón del menú de Archivo.
    // De encarga de recoger la posición en la que se encuentra el tabbed y pasarle
    // la variable con el índice para poder insertar desde un botón u otro llamando
    // al actionPerformed de cada uno de los tabbed.
    
    private void jMenuInsertarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jMenuInsertarActionPerformed
        int index = jTabbedPane.getSelectedIndex();
        
        if(index == 0){
            btnGrabarJActionPerformed(evt);
        } else if(index == 1){
            btnInsertarMActionPerformed(evt);
        } else if (index == 2){
            btnGrabarDActionPerformed(evt);
        } else if (index == 3){
            btnGrabarEActionPerformed(evt);
        }
    }//GEN-LAST:event_jMenuInsertarActionPerformed

    // Funcionalidad para el menú E/S Archivos que llama a un JFileChooser para poder cargar ficheros de texto.
    
    private void jMenuItemESActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jMenuItemESActionPerformed
        if (evt.getSource() == jMenuItemES) {
            String ruta = ".\\";
            JFileChooser fc = new JFileChooser(ruta);
            fc.setFileSelectionMode(JFileChooser.FILES_ONLY);
            FileNameExtensionFilter imgFilter = new FileNameExtensionFilter("txt", "rtf");
            fc.setFileFilter(imgFilter);
            int i = fc.showOpenDialog(this);
        }
    }//GEN-LAST:event_jMenuItemESActionPerformed

    // Estos son los métodos que se encargan de la validación de los campos de los formularios.
    // Si la validación es correcta, settea en blanco los campos que se habían puesto en rojo.
    // Para validar he usado expresiones regulares y el método matches de la Clase String.
    // Cuando la variable String que se le pasa al método coincide con la regex, devuelve un true,
    // sino, devuelve un false.
    
    public boolean validarDni(String dni){
        txtDniM.setBackground(Color.white);
        txtDniJ.setBackground(Color.white);
        txtDniE.setBackground(Color.white);
        txtDniD.setBackground(Color.white);
        return dni.matches("^[0-9]{8}[T|R|W|A|G|M|Y|F|P|D|X|B|N|J|Z|S|Q|V|H|L|C|K|E]{1}$" );
    }
    
    public boolean validarTelefono(String telefono){
        txtTelefonoM.setBackground(Color.white);
        txtTelefonoE.setBackground(Color.white);
        txtTelefonoJ.setBackground(Color.white);
        txtTelefonoD.setBackground(Color.white);
        return telefono.matches("^[0-9]{9}$" );
    }
    
    public boolean validaNum(String num){
        txtSueldoM.setBackground(Color.white);
        txtSueldoE.setBackground(Color.white);
        txtSueldoJ.setBackground(Color.white);
        txtSueldoD.setBackground(Color.white);
        txtPartidosGanadosE.setBackground(Color.white);
        txtPartidosGanadosJ.setBackground(Color.white);
        txtPartidosGanadosM.setBackground(Color.white);
        txtNumGoles.setBackground(Color.white);
        return num.matches("^[0-9]+$");
    }
    
    public boolean validaNombre(String nombre){
        txtNombreM.setBackground(Color.white);
        txtNombreE.setBackground(Color.white);
        txtNombreJ.setBackground(Color.white);
        txtNombreD.setBackground(Color.white);
        return nombre.matches("^([A-Z]{1}[a-z]+[ ]?){1,5}$");
    }
    
    public boolean validaFecha(String fecha){
        txtFechaNacimientoD.setBackground(Color.white);
        txtFechaNacimientoE.setBackground(Color.white);
        txtFechaNacimientoJ.setBackground(Color.white);
        txtFechaNacimientoM.setBackground(Color.white);
        return fecha.matches("^([0-2][0-9]|3[0-1])(\\/|-)(0[1-9]|1[0-2])\\2(\\d{4})$");
    }
    
     // Método que settea todos los campos de los formularios a limpio.
    
    public void limpiar(){
        txtNombreJ.setText("");
        txtDireccionJ.setText("");
        txtDniJ.setText("");
        txtTelefonoJ.setText("");
        txtFechaNacimientoD.setText("");
        txtFechaNacimientoJ.setText("");
        txtFechaNacimientoM.setText("");
        txtFechaNacimientoE.setText("");
        txtPartidosGanadosJ.getText();
        txtNumGoles.setText("");
        txtSueldoJ.setText("");
        txtPartidosGanadosJ.setText("");
        txtPartidosGanadosD.setText("");
        txtPartidosGanadosE.setText("");
        txtPartidosGanadosM.setText("");
        PosicionesJugadores.clearSelection();
        
        
    }
    
    // Estos métodos le pasan el tipo Object dato a la lógica en el controlador para buscar
    // en las listas el elemento que coincide con la posicion columnna[0] y la fila seleccionada,
    // oséase, el nombre. Una vez hecho, borra la fila seleccionada de la tabla.
    
    public void borrarElementoDirectivos(){
        int filaBorrar = jTableDir.getSelectedRow();
        Object dato = modeloTablaDirectivos.getValueAt(filaBorrar, 1);
        modeloTablaDirectivos.removeRow(filaBorrar); 
    }
    
    public void borrarElementoMantenedores(){
        int filaBorrar = jTablaMantenedores.getSelectedRow();
        Object dato = modeloTablaMantenedores.getValueAt(filaBorrar, 1);
        modeloTablaMantenedores.removeRow(filaBorrar); 
    }
    
    public void borrarElementoEntrenadores(){
        int filaBorrar = jTablaEntrenadores.getSelectedRow();
        Object dato = modeloTablaEntrenadores.getValueAt(filaBorrar, 1);
        modeloTablaEntrenadores.removeRow(filaBorrar); 
    }
    
    public void borrarElementoJugadores(){
        int filaBorrar = jTablaJugadores.getSelectedRow();
        Object dato = modeloTablaJugadores.getValueAt(filaBorrar, 1);
        modeloTablaJugadores.removeRow(filaBorrar); 
    }
    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(main_ClubDeportivo.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(main_ClubDeportivo.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(main_ClubDeportivo.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(main_ClubDeportivo.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new main_ClubDeportivo().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.ButtonGroup PosicionesJugadores;
    private javax.swing.JButton btnBorrarD;
    private javax.swing.JButton btnBorrarE;
    private javax.swing.JButton btnBorrarJ;
    private javax.swing.JButton btnBorrarM;
    private javax.swing.JButton btnGrabarD;
    private javax.swing.JButton btnGrabarE;
    private javax.swing.JButton btnGrabarJ;
    private javax.swing.JButton btnInsertarM;
    private javax.swing.ButtonGroup cargoDirectivos;
    private javax.swing.JCheckBox checkActivo;
    private javax.swing.JCheckBox checkFijo;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JMenu jMenuArchivos;
    private javax.swing.JMenu jMenuES;
    private javax.swing.JMenuItem jMenuInsertar;
    private javax.swing.JMenuItem jMenuItemES;
    private javax.swing.JMenuItem jMenuItemSalir;
    private javax.swing.JMenu jMenubtnSalir;
    private javax.swing.JPanel jPanelDirectivos;
    private javax.swing.JPanel jPanelEntrenadores;
    private javax.swing.JPanel jPanelJugadores;
    private javax.swing.JPanel jPanelMantenedores;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JScrollPane jScrollPane3;
    private javax.swing.JScrollPane jScrollPane4;
    private javax.swing.JTabbedPane jTabbedPane;
    private javax.swing.JTable jTablaEntrenadores;
    private javax.swing.JTable jTablaJugadores;
    private javax.swing.JTable jTablaMantenedores;
    private javax.swing.JTable jTableDir;
    private javax.swing.JLabel lblCargo;
    private javax.swing.JLabel lblDireccion;
    private javax.swing.JLabel lblDireccionD;
    private javax.swing.JLabel lblDireccionE;
    private javax.swing.JLabel lblDireccionM;
    private javax.swing.JLabel lblDni;
    private javax.swing.JLabel lblDniD;
    private javax.swing.JLabel lblDniE;
    private javax.swing.JLabel lblDniM;
    private javax.swing.JLabel lblFechaNacimientoD;
    private javax.swing.JLabel lblFechanNacimientoJ;
    private javax.swing.JLabel lblFechanNacimientoM;
    private javax.swing.JLabel lblGanadosD;
    private javax.swing.JLabel lblNombre;
    private javax.swing.JLabel lblNombreD;
    private javax.swing.JLabel lblNombreE;
    private javax.swing.JLabel lblNombreM;
    private javax.swing.JLabel lblNumGoles;
    private javax.swing.JLabel lblPartidosGanados;
    private javax.swing.JLabel lblPartidosGanados1;
    private javax.swing.JLabel lblPartidosGanadosM;
    private javax.swing.JLabel lblPosicion;
    private javax.swing.JLabel lblSueldo;
    private javax.swing.JLabel lblSueldoJ;
    private javax.swing.JLabel lblSueldoJ1;
    private javax.swing.JLabel lblSueldoJ2;
    private javax.swing.JLabel lbltelefono;
    private javax.swing.JLabel lbltelefonoD;
    private javax.swing.JLabel lbltelefonoE;
    private javax.swing.JLabel lbltelefonoM;
    private javax.swing.JMenuBar menuBar;
    private javax.swing.JRadioButton rbtnDefensa;
    private javax.swing.JRadioButton rbtnDelantero;
    private javax.swing.JRadioButton rbtnDelegado;
    private javax.swing.JRadioButton rbtnMedio;
    private javax.swing.JRadioButton rbtnPortero;
    private javax.swing.JRadioButton rbtnPresi;
    private javax.swing.JRadioButton rbtnSecretario;
    private javax.swing.JTextField txtDireccionD;
    private javax.swing.JTextField txtDireccionE;
    private javax.swing.JTextField txtDireccionJ;
    private javax.swing.JTextField txtDireccionM;
    private javax.swing.JTextField txtDniD;
    private javax.swing.JTextField txtDniE;
    private javax.swing.JTextField txtDniJ;
    private javax.swing.JTextField txtDniM;
    private javax.swing.JTextField txtFechaNacimientoD;
    private javax.swing.JTextField txtFechaNacimientoE;
    private javax.swing.JTextField txtFechaNacimientoJ;
    private javax.swing.JTextField txtFechaNacimientoM;
    private javax.swing.JTextField txtNombreD;
    private javax.swing.JTextField txtNombreE;
    private javax.swing.JTextField txtNombreJ;
    private javax.swing.JTextField txtNombreM;
    private javax.swing.JTextField txtNumGoles;
    private javax.swing.JTextField txtPartidosGanadosD;
    private javax.swing.JTextField txtPartidosGanadosE;
    private javax.swing.JTextField txtPartidosGanadosJ;
    private javax.swing.JTextField txtPartidosGanadosM;
    private javax.swing.JTextField txtSueldoD;
    private javax.swing.JTextField txtSueldoE;
    private javax.swing.JTextField txtSueldoJ;
    private javax.swing.JTextField txtSueldoM;
    private javax.swing.JTextField txtTelefonoD;
    private javax.swing.JTextField txtTelefonoE;
    private javax.swing.JTextField txtTelefonoJ;
    private javax.swing.JTextField txtTelefonoM;
    // End of variables declaration//GEN-END:variables

}
